// Code generated by simpleassets DO NOT EDIT.
package builtin

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io/ioutil"
	"strings"
)

// Asset stores the file data.
type Asset struct {
	Name       string
	Compressed bool
	Data       string
}

// Stored assets by filename
var assets = map[string]Asset{}

// ReadAsset reads an asset from the store.
func ReadAsset(name string) ([]byte, error) {

	// Get asset from map and verify
	asset, ok := assets[name]
	if !ok {
		return nil, fmt.Errorf("asset does not exist: %s", name)
	}

	// Decode base64
	decoded, err := base64.StdEncoding.DecodeString(asset.Data)
	if err != nil {
		return nil, err
	}

	// Decompress if required
	if asset.Compressed {
		reader, err := gzip.NewReader(bytes.NewReader(decoded))
		if err != nil {
			return nil, err
		}
		return ioutil.ReadAll(reader)
	}
	return decoded, nil
}

// WriteAsset writes an asset to the store.
func WriteAsset(name string, data []byte) {
	encoded := base64.StdEncoding.EncodeToString([]byte(data))

	// Add to list of asset names if needed
	if _, ok := assets[name]; !ok {
		assetNames = append(assetNames, name)
	}

	// Store assset
	assets[name] = Asset{Name: name, Compressed: false, Data: encoded}
}

// List of asset names
var assetNames = []string{
	"base64.js",
	"core.js",
}

// ListAssetNames returns the list of asset names
func ListAssetNames() []string {
	return assetNames
}

func init() {
	assets["base64.js"] = Asset{Name: "base64.js", Compressed: true, Data: asset0000}
	assets["core.js"] = Asset{Name: "core.js", Compressed: true, Data: asset0001}
}

var asset0000 = strings.Join([]string{
	"H4sIAAAAAAAA/5xWbXPbNhP8rl+x0TyPRVY0FcuO6lpmNG5e2rRJ0yZu0yZKZyDyJCGmAAYALSux/nsH",
	"IClR8lsSfbJxuMNhb3dBb5yL2HAp4CkpTYAxi41UCx+fGwDAx/DMIiM5RkJjLghRFKFVZbWws1MGQjZL",
	"qiz763Rw8uJxiFc04dqQAtNgAkxIsZjJXGMmkzylcJVQlPHevQ9Qlfd8fC4bcu35/aXfdwlLUKoJm8FG",
	"pwMhEwo/aEztcemcLTR0nmVSGUowYpp6B4ilOCeluRQ6wHzKU8JIybkmpWGmzFQZtt6cRphLdWZj5XJV",
	"xkgZYJQbLGSOGVtA0DkpnAk5DxtLv8KNLmySxr0oQjMXxTWTJgaryBHMlOvatd11ahOw/4fMyNEWwK/l",
	"bN16C3yWpTQjYZibqBzD5iCRpEVrdSt7Y0M6YzHpejEuYKYEErFMKIE2iosJPCENG6WLAM+e+CFOp1xj",
	"rlim3WbBDD8nd8xWKba6TQmpUbxMqp0f1rNOpwSp+IQLlq6zYyYwIigyitM5Ja64kaOw2roqYdSiBo/9",
	"rXDzmmiWzCnYEzMTTz3yb0pAhJU0vG3kq985U65PROvRFbBdt9vVJ5Oron/vtdtZJYSKspTF5HXeDc1Q",
	"DMdDhfftziRAs+nXWl9d4eqS7WGFCiJ3ytVdZQt282Zw6dd4VsOqsZlZ6q/RKKdWaWrKFIutzjWZAFma",
	"a2QsSSyH1jEv8hsVcqPeASI0T3589PjJ059+fvbLr89f/Pby9z9evT798683f//zlo3ihMaTKf9wls6E",
	"zD4qbfLz+cXi0/297v7Bg973hz+0O1EzqJPoFU3ylCmrLUVaO/5JxFOKzzCWasZSxFIpio0gra1Gygts",
	"8n6tjFHvQBEidP71BkfvTnbfst1Pw6Q97Lz/fLD0vxtcWe0uvcFRFPmDy831/WU08Af/6/QL6BzWIyPZ",
	"7ewpZRhhky7r+TgouZmxLAALMAoQB5ucJp2nxkLdDMAR4f6VuI0WhcOUxMRM8X/s950mJRIypGbW+q14",
	"x45c5WQbq0JjqeD1wXG8Wai/rQRrZx5bn2e58UgmdGI83m77Ph6i++DBteK5vIQ3+ubM+K5M/0qqmSo5",
	"h6A5ThcZPVFKKq/5lPGUEksquqA4N4SWnWILUqD1hotEzltHzsvK0Rlp/auiVyyFYVzotSg0ZG40T8iS",
	"0UL8nBku9qCYmFBobWujsWLW1p8Yjo+x1/PhcDk+xqH9c0vV5fTbkSWyu/mJ8coaDx9i7xA76O37aN8Q",
	"7xbxa2G9Iad3S0kXqZtLXbvP3P0VtTQEUWLxKIkWoLRHB1DKtEHrpKUx52YK+pizFJpPhN7yqoLbgxKE",
	"UKc8Ju9+UCzvwvXYjKKoGep8VIzLszEfR2VO6XZ1zZbPwy2a7XSKh9c+XfbboWizNJbin9obGIDOSYAL",
	"x4H6E5wxZTbMzX5sSJEuMDQBhiLAcBxgqMBEghZa7mMmnlZPpntyM0rCu8zk1rdnPSwr3XvODkND2lTZ",
	"m9z4Us1YgO7STEIFDlxDSFP5drqoANoUh/3gLN4bi2H19vAxZlxrxyFrUppmWcpjbhbbqLQjy4VmyZIu",
	"duFteuIO9v0bjHfDY9VeANUtvbb/9Ra5UriVDxcJXbwcezXrWtmWlf8hLr9oX/d6Y4Sn9u4+yZXoud3d",
	"L9i95VhrC7JnRRF6BxiUFAzHSs4elX5c9x1rIteasv0dwfbxdZUCrNcOby/+zQVXS0X5mz+itt1l6ff/",
	"AwAA//8BAAD//44KJseKDQAA",
}, "")

var asset0001 = strings.Join([]string{
	"H4sIAAAAAAAA/2yST2vbQBTEz9KnmOaQrIhQSk6l6lLS9FT6BxraS8hhbb21F9a74u0qrjD67mVX8p9C",
	"fTH2m/nNjJDQg1tH4x0Eex9raLWOnscKhxIAjIaIY09eoyNtHEFKiZuj6wbX18uhUbvu6Eqfuzs8fPvc",
	"4CdtTIjEUAHKQTnvxp0fAna+Gyw1J8OMEc8vNY54UeGwFMr1qnaq2myYQDYQ/j2WU3UsS396zzHgjZS4",
	"GtzM7q7w8XR5j7g14SIrM3Aoy2LtXYgIke/VCvKsCJGToCheFWM1aEg42uOBWY2fBq2Jk6Sx5DZxW7Vn",
	"4W9D+0X8y7j4LjvEatBZpD1DJKWBxNs6BX8lB4kzrIXBh+XQwtzezj2Khf1sXhb5eqv40Xf0EIXJ8Kks",
	"CqY4sEtF2rKYTgPV6j5EvhyYGmXw4niKbNym0ex3jwu4UX1vR+EGa+v/DUqhU1uWZZGeZxPIdZcJ2tVQ",
	"vAlzjKUIptBDYmP9StmsF/OTF1+efnxvQq5g9CjyYO3q9JUQaVyV8hbQq7KQyKZecSAx7xMpINcq0sv8",
	"qmxDzBXilv3+/Ls9r05/dSqqeclUtX8BAAD//wEAAP//qXmTuiUDAAA=",
}, "")
